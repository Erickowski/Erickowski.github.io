{"version":3,"sources":["webpack:///./src/components/commons/Post.jsx","webpack:///./src/components/commons/Posts.jsx","webpack:///./src/components/commons/Hero.jsx","webpack:///./src/components/commons/Button.jsx","webpack:///./src/pages/blog.jsx"],"names":["PostContainer","Link","Post","text","link","to","PostsContainer","Posts","nodes","useStaticQuery","allDatoCmsPost","path","window","location","pathname","className","map","index","titulo","slug","key","Button","color","background","HeroContainer","props","reverse","Hero","title","quote","author","fluid","image","sharp","ButtonContainer","Blog","data"],"mappings":"iJAIA,IAAMA,EAAgB,YAAOC,OAAP,2CAAH,8TAwBJC,EAJF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACpB,OAAO,YAACJ,EAAD,CAAeK,GAAID,GAAOD,I,YClBnC,IAAMG,EAAc,qkBAoFLC,IAzCD,WAAO,IAECC,EAChBC,yBAAe,aADjBC,eAAkBF,MAYdG,EAAyB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAExE,OACE,YAACR,EAAD,KACE,6CACA,mBAAKS,UAAU,oBACZP,EAAMQ,KAAI,WAAmBC,GAAnB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,OACT,YAAC,EAAD,CACEC,IAAG,QAAUH,EACbd,KAAMe,EACNd,KAAe,MAATO,EAAe,QAAUQ,EAAOA,QAIlC,MAATR,GACC,YAACU,EAAA,EAAD,CACElB,KAAK,UACLmB,MAAM,eACNC,WAAW,eACXnB,MAAI,EACJC,GAAG,Y,+FChFPmB,EAAa,kSAuBG,SAAAC,GAAK,OAAKA,EAAMC,QAAU,cAAgB,QAvB7C,+IA8DJC,IAlBF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAGjBC,EAHqC,EAAZC,MAC5BxB,MAGE,GADRyB,MAASF,MAELpB,EAAyB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GACxE,OACE,YAACU,EAAD,CAAeE,QAAkB,UAATf,GACtB,mBAAKI,UAAU,SACb,sBAAKa,GACL,yBAAKC,EAAL,KACA,iBAAGd,UAAU,UAAb,KAAyBe,IAE3B,YAAC,IAAD,CAAOC,MAAOA,EAAOhB,UAAU,a,sFCzD/BmB,EAAe,sNAQC,SAAAT,GAAK,OAAIA,EAAMH,QARhB,+BAWR,SAAAG,GAAK,OAAIA,EAAMH,QAXP,qJAqBN,SAAAG,GAAK,OAAIA,EAAMF,aArBT,4HA+BD,SAAAE,GAAK,OAAIA,EAAMH,QA/Bd,2BAgCU,SAAAG,GAAK,OAAIA,EAAMH,QAhCzB,eAiCD,SAAAG,GAAK,OAAIA,EAAMH,QAjCd,oKAyCO,SAAAG,GAAK,OAAIA,EAAMH,QAzCtB,aA0CH,SAAAG,GAAK,OAAIA,EAAMH,QA1CZ,2JAqDD,SAAAG,GAAK,OAAIA,EAAMH,QArDd,4BAsDW,SAAAG,GAAK,OAAIA,EAAMH,QAtD1B,gBAuDA,SAAAG,GAAK,OAAIA,EAAMH,QAvDf,sKA+DQ,SAAAG,GAAK,OAAIA,EAAMH,QA/DvB,cAgEF,SAAAG,GAAK,OAAIA,EAAMH,QAhEb,0GAyFND,IAdA,SAAC,GAAyD,IAAvDlB,EAAsD,EAAtDA,KAAMmB,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,WAAyC,IAA7BlB,UAA6B,MAAxB,IAAwB,MAAnBD,YAAmB,SACtE,OACE,YAAC8B,EAAD,CAAiBZ,MAAOA,EAAOC,WAAYA,GACxCnB,EACC,YAAC,OAAD,CAAMC,GAAIA,GACR,4BAAQF,IAGVA,K,oCCvFR,iFAyCegC,UAjCF,WAAO,IACVC,EAAS3B,yBAAe,cAAxB2B,KAmBR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACER,MAAM,OACNE,OAAO,mBACPD,MAAM,wEACNG,MAAOI,IAET,YAAC,IAAD","file":"component---src-pages-blog-jsx-ac118fc4f26600d97e82.js","sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\n\nconst PostContainer = styled(Link)`\n  width: 90vw;\n  max-width: 650px;\n  height: 125px;\n  margin-bottom: 10px;\n  background-color: var(--black);\n  color: var(--white);\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 25px;\n  @media (min-width: 600px) {\n    width: 47.5vw;\n    height: 190px;\n    font-size: 2.5rem;\n    text-align: center;\n  }\n`\n\nconst Post = ({ text, link }) => {\n  return <PostContainer to={link}>{text}</PostContainer>\n}\n\nexport default Post\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Post from \"./Post\"\nimport Button from \"../commons/Button\"\n\nconst PostsContainer = styled.section`\n  padding: 25px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  h2,\n  .posts__container {\n    margin-bottom: 10px;\n  }\n  .posts__container {\n    a {\n      margin-bottom: 10px;\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n  @media (min-width: 600px) {\n    h2 {\n      font-size: 3.6rem;\n    }\n    .posts__container {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: 1fr 1fr;\n      grid-gap: 10px;\n      a:nth-of-type(1) {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n      a:nth-of-type(2) {\n        grid-column: 1 / 2;\n        grid-row: 2 / 3;\n      }\n      a:nth-of-type(3) {\n        grid-column: 2 / 3;\n        grid-row: 1 / 3;\n        height: 400px;\n      }\n    }\n  }\n`\n\nconst Posts = () => {\n  const {\n    allDatoCmsPost: { nodes },\n  } = useStaticQuery(graphql`\n    query {\n      allDatoCmsPost(limit: 3) {\n        nodes {\n          titulo\n          slug\n        }\n      }\n    }\n  `)\n\n  const path = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n\n  return (\n    <PostsContainer>\n      <h2>Entradas destacadas</h2>\n      <div className=\"posts__container\">\n        {nodes.map(({ titulo, slug }, index) => (\n          <Post\n            key={`Post-${index}`}\n            text={titulo}\n            link={path === \"/\" ? \"blog/\" + slug : slug}\n          />\n        ))}\n      </div>\n      {path === \"/\" && (\n        <Button\n          text=\"ver más\"\n          color=\"var(--black)\"\n          background=\"var(--white)\"\n          link\n          to=\"blog\"\n        />\n      )}\n    </PostsContainer>\n  )\n}\n\nexport default Posts\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport Image from \"gatsby-image\"\n\nconst HeroContainer = styled.section`\n  width: 100%;\n  max-width: 1300px;\n  padding: 25px 10px;\n  h2 {\n    text-align: center;\n  }\n  .image {\n    display: none;\n  }\n  @media (min-width: 500px) {\n    .quote {\n      h2,\n      p {\n        font-size: 2rem;\n      }\n      p {\n        text-align: justify;\n      }\n    }\n  }\n  @media (min-width: 767px) {\n    display: flex;\n    flex-direction: ${props => (props.reverse ? \"row-reverse\" : \"row\")};\n    padding: 0;\n    .quote {\n      width: 60%;\n      padding: 50px 10px;\n      h2,\n      p {\n        font-size: 3.6rem;\n      }\n      h2 {\n        margin-bottom: 50px;\n      }\n    }\n    .image {\n      display: block;\n      width: 40%;\n      height: 437px;\n    }\n  }\n`\n\nconst Hero = ({ title, quote, author, image }) => {\n  const { nodes } = image\n  const {\n    sharp: { fluid },\n  } = nodes[0]\n  const path = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n  return (\n    <HeroContainer reverse={path === \"/blog\"}>\n      <div className=\"quote\">\n        <h2>{title}</h2>\n        <p>”{quote}”</p>\n        <p className=\"author\">- {author}</p>\n      </div>\n      <Image fluid={fluid} className=\"image\" />\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\n\nconst ButtonContainer = styled.button`\n  width: 150px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--bold);\n  background: transparent;\n  border: 2px solid ${props => props.color};\n  position: relative;\n  a {\n    color: ${props => props.color};\n    text-decoration: none;\n    text-transform: uppercase;\n    span {\n      position: relative;\n      z-index: 2;\n      transition: color 0.5s;\n      transition-delay: 1.25s;\n    }\n    &:hover span {\n      color: ${props => props.background};\n    }\n    &::before {\n      content: \"\";\n      position: absolute;\n      left: -20px;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 20px;\n      height: 2px;\n      background: ${props => props.color};\n      box-shadow: 5px -8px 0 ${props => props.color},\n        5px 8px 0 ${props => props.color};\n      transition: width 0.5s, left 0.5s, height 0.5s, box-shadow 0.5s;\n      transition-delay: 1s, 0.5s, 0s, 0s;\n    }\n    &:hover::before {\n      width: 60%;\n      height: 100%;\n      left: -2px;\n      box-shadow: 5px 0 0 ${props => props.color},\n        5px 0 0 ${props => props.color};\n      transition-delay: 0s, 0.5s, 1s, 1s;\n    }\n    &::after {\n      content: \"\";\n      position: absolute;\n      right: -20px;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 20px;\n      height: 2px;\n      background: ${props => props.color};\n      box-shadow: -5px -8px 0 ${props => props.color},\n        -5px 8px 0 ${props => props.color};\n      transition: width 0.5s, right 0.5s, height 0.5s, box-shadow 0.5s;\n      transition-delay: 1s, 0.5s, 0s, 0s;\n    }\n    &:hover::after {\n      width: 60%;\n      height: 100%;\n      right: -2px;\n      box-shadow: -5px 0 0 ${props => props.color},\n        -5px 0 0 ${props => props.color};\n      transition-delay: 0s, 0.5s, 1s, 1s;\n    }\n  }\n  @media (min-width: 600px) {\n    width: 200px;\n    height: 80px;\n    font-size: 2.8rem;\n  }\n`\n\nconst Button = ({ text, color, background, to = \"#\", link = false }) => {\n  return (\n    <ButtonContainer color={color} background={background}>\n      {link ? (\n        <Link to={to}>\n          <span> {text}</span>\n        </Link>\n      ) : (\n        text\n      )}\n    </ButtonContainer>\n  )\n}\n\nexport default Button\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout/Layout\"\n\nimport Hero from \"../components/commons/Hero\"\nimport Posts from \"../components/commons/Posts\"\n\nconst Blog = () => {\n  const { data } = useStaticQuery(graphql`\n    query {\n      data: allFile(\n        filter: {\n          sourceInstanceName: { eq: \"images\" }\n          relativePath: { eq: \"Jose_Vasconcelos.jpg\" }\n        }\n      ) {\n        nodes {\n          relativePath\n          sharp: childImageSharp {\n            fluid(maxWidth: 600) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <Hero\n        title=\"Blog\"\n        author=\"José Vasconcelos\"\n        quote=\"El conocimiento es sólo una de las representaciones de la existencia.\"\n        image={data}\n      />\n      <Posts />\n    </Layout>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}