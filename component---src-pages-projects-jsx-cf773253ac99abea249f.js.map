{"version":3,"sources":["webpack:///./src/components/commons/Hero.jsx","webpack:///./src/components/commons/Project.jsx","webpack:///./src/components/commons/Projects.jsx","webpack:///./src/components/commons/Button.jsx","webpack:///./src/pages/projects.jsx"],"names":["HeroContainer","props","reverse","Hero","title","quote","author","fluid","image","nodes","sharp","path","window","location","pathname","className","ProjectContainer","Link","Project","text","link","to","ProjectsContainer","Projects","useStaticQuery","allDatoCmsProject","map","index","titulo","slug","key","Button","color","background","ButtonContainer","ProjectsPage","data"],"mappings":"yJAIMA,EAAa,kSAuBG,SAAAC,GAAK,OAAKA,EAAMC,QAAU,cAAgB,QAvB7C,+IA8DJC,IAlBF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAGjBC,EAHqC,EAAZC,MAC5BC,MAGE,GADRC,MAASH,MAELI,EAAyB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GACxE,OACE,YAACd,EAAD,CAAeE,QAAkB,UAATS,GACtB,mBAAKI,UAAU,SACb,sBAAKX,GACL,yBAAKC,EAAL,KACA,iBAAGU,UAAU,UAAb,KAAyBT,IAE3B,YAAC,IAAD,CAAOC,MAAOA,EAAOQ,UAAU,a,sFCzDrC,IAAMC,EAAmB,YAAOC,OAAP,8CAAH,0SAuBPC,EAJC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACvB,OAAO,YAACJ,EAAD,CAAkBK,GAAID,GAAOD,I,YCjBtC,IAAMG,EAAiB,glBAoFRC,IAzCE,WAAO,IAECd,EACnBe,yBAAe,cADjBC,kBAAqBhB,MAYjBE,EAAyB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAExE,OACE,YAACQ,EAAD,KACE,8CACA,mBAAKP,UAAU,uBACZN,EAAMiB,KAAI,WAAmBC,GAAnB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,OACT,YAAC,EAAD,CACEC,IAAG,YAAcH,EACjBR,KAAMS,EACNR,KAAe,MAATT,EAAe,YAAckB,EAAOA,QAItC,MAATlB,GACC,YAACoB,EAAA,EAAD,CACEZ,KAAK,UACLa,MAAM,eACNC,WAAW,eACXb,MAAI,EACJC,GAAG,iB,sFChFPa,EAAe,sNAQC,SAAAjC,GAAK,OAAIA,EAAM+B,QARhB,+BAWR,SAAA/B,GAAK,OAAIA,EAAM+B,QAXP,qJAqBN,SAAA/B,GAAK,OAAIA,EAAMgC,aArBT,4HA+BD,SAAAhC,GAAK,OAAIA,EAAM+B,QA/Bd,2BAgCU,SAAA/B,GAAK,OAAIA,EAAM+B,QAhCzB,eAiCD,SAAA/B,GAAK,OAAIA,EAAM+B,QAjCd,oKAyCO,SAAA/B,GAAK,OAAIA,EAAM+B,QAzCtB,aA0CH,SAAA/B,GAAK,OAAIA,EAAM+B,QA1CZ,2JAqDD,SAAA/B,GAAK,OAAIA,EAAM+B,QArDd,4BAsDW,SAAA/B,GAAK,OAAIA,EAAM+B,QAtD1B,gBAuDA,SAAA/B,GAAK,OAAIA,EAAM+B,QAvDf,sKA+DQ,SAAA/B,GAAK,OAAIA,EAAM+B,QA/DvB,cAgEF,SAAA/B,GAAK,OAAIA,EAAM+B,QAhEb,0GAyFND,IAdA,SAAC,GAAyD,IAAvDZ,EAAsD,EAAtDA,KAAMa,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,WAAyC,IAA7BZ,UAA6B,MAAxB,IAAwB,MAAnBD,YAAmB,SACtE,OACE,YAACc,EAAD,CAAiBF,MAAOA,EAAOC,WAAYA,GACxCb,EACC,YAAC,OAAD,CAAMC,GAAIA,GACR,4BAAQF,IAGVA,K,kCCvFR,iFAyCegB,UAjCM,WAAO,IAClBC,EAASZ,yBAAe,cAAxBY,KAmBR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEhC,MAAM,YACNE,OAAO,eACPD,MAAM,iGACNG,MAAO4B,IAET,YAAC,IAAD","file":"component---src-pages-projects-jsx-cf773253ac99abea249f.js","sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport Image from \"gatsby-image\"\n\nconst HeroContainer = styled.section`\n  width: 100%;\n  max-width: 1300px;\n  padding: 25px 10px;\n  h2 {\n    text-align: center;\n  }\n  .image {\n    display: none;\n  }\n  @media (min-width: 500px) {\n    .quote {\n      h2,\n      p {\n        font-size: 2rem;\n      }\n      p {\n        text-align: justify;\n      }\n    }\n  }\n  @media (min-width: 767px) {\n    display: flex;\n    flex-direction: ${props => (props.reverse ? \"row-reverse\" : \"row\")};\n    padding: 0;\n    .quote {\n      width: 60%;\n      padding: 50px 10px;\n      h2,\n      p {\n        font-size: 3.6rem;\n      }\n      h2 {\n        margin-bottom: 50px;\n      }\n    }\n    .image {\n      display: block;\n      width: 40%;\n      height: 437px;\n    }\n  }\n`\n\nconst Hero = ({ title, quote, author, image }) => {\n  const { nodes } = image\n  const {\n    sharp: { fluid },\n  } = nodes[0]\n  const path = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n  return (\n    <HeroContainer reverse={path === \"/blog\"}>\n      <div className=\"quote\">\n        <h2>{title}</h2>\n        <p>”{quote}”</p>\n        <p className=\"author\">- {author}</p>\n      </div>\n      <Image fluid={fluid} className=\"image\" />\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\n\nconst ProjectContainer = styled(Link)`\n  width: 90vw;\n  max-width: 650px;\n  height: 125px;\n  margin-bottom: 10px;\n  background-color: var(--black);\n  color: var(--white);\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 25px;\n  @media (min-width: 600px) {\n    width: 47.5vw;\n    height: 190px;\n    font-size: 3rem;\n  }\n`\n\nconst Project = ({ text, link }) => {\n  return <ProjectContainer to={link}>{text}</ProjectContainer>\n}\n\nexport default Project\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Project from \"./Project\"\nimport Button from \"../commons/Button\"\n\nconst ProjectsContainer = styled.section`\n  padding: 25px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  h2,\n  .projects__container {\n    margin-bottom: 10px;\n  }\n  .projects__container {\n    a {\n      margin-bottom: 10px;\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n  @media (min-width: 600px) {\n    h2 {\n      font-size: 3.6rem;\n    }\n    .projects__container {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: 1fr 1fr;\n      grid-gap: 10px;\n      a:nth-of-type(1) {\n        grid-column: 1 / 2;\n        grid-row: 1 / 3;\n        height: 400px;\n      }\n      a:nth-of-type(2) {\n        grid-column: 2 / 3;\n        grid-row: 1 / 2;\n      }\n      a:nth-of-type(3) {\n        grid-column: 2 / 3;\n        grid-row: 2 / 3;\n      }\n    }\n  }\n`\n\nconst Projects = () => {\n  const {\n    allDatoCmsProject: { nodes },\n  } = useStaticQuery(graphql`\n    query {\n      allDatoCmsProject(limit: 3) {\n        nodes {\n          titulo\n          slug\n        }\n      }\n    }\n  `)\n\n  const path = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n\n  return (\n    <ProjectsContainer>\n      <h2>Proyectos destacados</h2>\n      <div className=\"projects__container\">\n        {nodes.map(({ titulo, slug }, index) => (\n          <Project\n            key={`Proyecto-${index}`}\n            text={titulo}\n            link={path === \"/\" ? \"projects/\" + slug : slug}\n          />\n        ))}\n      </div>\n      {path === \"/\" && (\n        <Button\n          text=\"ver más\"\n          color=\"var(--black)\"\n          background=\"var(--white)\"\n          link\n          to=\"/projects\"\n        />\n      )}\n    </ProjectsContainer>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\n\nconst ButtonContainer = styled.button`\n  width: 150px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--bold);\n  background: transparent;\n  border: 2px solid ${props => props.color};\n  position: relative;\n  a {\n    color: ${props => props.color};\n    text-decoration: none;\n    text-transform: uppercase;\n    span {\n      position: relative;\n      z-index: 2;\n      transition: color 0.5s;\n      transition-delay: 1.25s;\n    }\n    &:hover span {\n      color: ${props => props.background};\n    }\n    &::before {\n      content: \"\";\n      position: absolute;\n      left: -20px;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 20px;\n      height: 2px;\n      background: ${props => props.color};\n      box-shadow: 5px -8px 0 ${props => props.color},\n        5px 8px 0 ${props => props.color};\n      transition: width 0.5s, left 0.5s, height 0.5s, box-shadow 0.5s;\n      transition-delay: 1s, 0.5s, 0s, 0s;\n    }\n    &:hover::before {\n      width: 60%;\n      height: 100%;\n      left: -2px;\n      box-shadow: 5px 0 0 ${props => props.color},\n        5px 0 0 ${props => props.color};\n      transition-delay: 0s, 0.5s, 1s, 1s;\n    }\n    &::after {\n      content: \"\";\n      position: absolute;\n      right: -20px;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 20px;\n      height: 2px;\n      background: ${props => props.color};\n      box-shadow: -5px -8px 0 ${props => props.color},\n        -5px 8px 0 ${props => props.color};\n      transition: width 0.5s, right 0.5s, height 0.5s, box-shadow 0.5s;\n      transition-delay: 1s, 0.5s, 0s, 0s;\n    }\n    &:hover::after {\n      width: 60%;\n      height: 100%;\n      right: -2px;\n      box-shadow: -5px 0 0 ${props => props.color},\n        -5px 0 0 ${props => props.color};\n      transition-delay: 0s, 0.5s, 1s, 1s;\n    }\n  }\n  @media (min-width: 600px) {\n    width: 200px;\n    height: 80px;\n    font-size: 2.8rem;\n  }\n`\n\nconst Button = ({ text, color, background, to = \"#\", link = false }) => {\n  return (\n    <ButtonContainer color={color} background={background}>\n      {link ? (\n        <Link to={to}>\n          <span> {text}</span>\n        </Link>\n      ) : (\n        text\n      )}\n    </ButtonContainer>\n  )\n}\n\nexport default Button\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout/Layout\"\n\nimport Hero from \"../components/commons/Hero\"\nimport Projects from \"../components/commons/Projects\"\n\nconst ProjectsPage = () => {\n  const { data } = useStaticQuery(graphql`\n    query {\n      data: allFile(\n        filter: {\n          sourceInstanceName: { eq: \"images\" }\n          relativePath: { eq: \"Muhammad_Ali.jpg\" }\n        }\n      ) {\n        nodes {\n          relativePath\n          sharp: childImageSharp {\n            fluid(maxWidth: 600) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <Hero\n        title=\"Proyectos\"\n        author=\"Muhammad Ali\"\n        quote=\"Para ser un campeón, tienes que creer que eres el mejor; si no lo eres, haz como si lo fueras.\"\n        image={data}\n      />\n      <Projects />\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n"],"sourceRoot":""}